name: CI/CD balance game

# push 일 때 수행
on:
  pull_request:
    branches:
      - main

# workflow 읽기만 설정
permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up jdk 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Gradle Cashing
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: make application-mysql.yml
        if: contains(github.ref, 'main')
        run: |
          cd ./src/main/resources
          touch ./application-mysql.yml
          echo "${{secrets.MYSQL}}" > ./application-mysql.yml
        shell: bash

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Docker build & push to main
        if: contains(github.ref, 'main')
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f DockerFile -t ${{ secrets.DOCKER_USERNAME }}/balance-game-server .
          docker push ${{ secrets.DOCKER_USERNAME }}/balance-game-server

      - name: Deploy to main
        uses: appleboy/ssh-action@v0.1.4
        id: deploy-main
        if: contains(github.ref, 'main')
        with:
          host: ${{ secrets.HOST_MAIN }} # EC2 퍼블릭 IPv4 DNS
          username: ${{secrets.USER_NAME}}
          key: ${{ secrets.PRIVATE_KEY }}
          envs: GITHUB_SHA
          script: |
            docker stop balance-game-server
            docker rm balance-game-server
            docker rmi balance-game-server
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/balance-game-server
            sudo docker run -d -p 8080:8080 --name balanceGameServer ${{ secrets.DOCKER_USERNAME }}/balance-game-server
            sudo docker image prune -f